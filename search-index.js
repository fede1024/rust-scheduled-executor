var searchIndex = {};
searchIndex["scheduled_executor"] = {"doc":"The library","items":[[3,"Handle","scheduled_executor","A non-sendable handle to an event loop, useful for manufacturing instances of `LoopData`.",null,null],[3,"Remote","","Handle to an event loop, used to construct I/O objects, send messages, and otherwise interact indirectly with the event loop itself.",null,null],[0,"executor","","Executors are utilities that allow easy scheduling and execution of functions or closures. The `CoreExecutor` will use a single thread for scheduling and execution, while the `ThreadPoolExecutor` will use a thread for scheduling, but multiple threads for the execution of the function. Internally, each executor uses a `tokio_core::reactor::Core` as event loop, that will drive the scheduling of the functions (and for the `CoreExecutor`, also their execution). A reference to the event loop is passed to every closure when executed, allowing it to register additional events if needed.",null,null],[3,"CoreExecutor","scheduled_executor::executor","A `CoreExecutor` is the most simple executor provided. It runs a single thread, which is responsible for both scheduling the closure (registering the timer for the wakeup), and the actual execution of the closure. The executor will stop once dropped. The `CoreExecutor` can be cloned to generate a new reference to the same underlying executor.",null,null],[3,"ThreadPoolExecutor","","",null,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"new","","Creates a new `CoreExecutor`.",0,{"inputs":[],"output":{"name":"result"}}],[11,"with_name","","Creates a new `CoreExecutor` with the specified thread name.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"schedule_fixed_interval","","Schedule a function for running at fixed intervals. The executor will try to run the function every `interval`, but if one execution takes longer than `interval` it will delay all the subsequent calls.",0,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"duration"},{"name":"f"}],"output":null}],[11,"schedule_fixed_rate","","",0,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"duration"},{"name":"f"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"threadpoolexecutor"}}],[11,"new","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"with_prefix","","",1,{"inputs":[{"name":"usize"},{"name":"str"}],"output":{"name":"result"}}],[11,"with_executor","","",1,{"inputs":[{"name":"usize"},{"name":"str"},{"name":"coreexecutor"}],"output":{"name":"threadpoolexecutor"}}],[11,"schedule_fixed_rate","","",1,{"inputs":[{"name":"self"},{"name":"duration"},{"name":"duration"},{"name":"f"}],"output":null}],[11,"pool","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cpupool"}}],[0,"task_group","scheduled_executor","",null,null],[8,"TaskGroup","scheduled_executor::task_group","",null,null],[16,"TaskId","","",2,null],[10,"get_tasks","","",2,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"execute","","",2,null],[8,"TaskGroupScheduler","","",null,null],[10,"schedule","","",3,{"inputs":[{"name":"self"},{"name":"t"},{"name":"duration"},{"name":"duration"}],"output":{"name":"arc"}}],[11,"schedule","scheduled_executor::executor","",0,{"inputs":[{"name":"self"},{"name":"t"},{"name":"duration"},{"name":"duration"}],"output":{"name":"arc"}}],[11,"schedule","","",1,{"inputs":[{"name":"self"},{"name":"t"},{"name":"duration"},{"name":"duration"}],"output":{"name":"arc"}}],[11,"remote","scheduled_executor","Returns a reference to the underlying remote handle to the event loop.",4,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"spawn","","Spawns a new future on the event loop this handle is associated with.",4,null],[11,"spawn_fn","","Spawns a closure on this event loop.",4,null],[11,"id","","Return the ID of the represented Core",4,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"remote"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"handle"}}],[11,"spawn","","Spawns a new future into the event loop this remote is associated with.",5,null],[11,"id","","Return the ID of the represented Core",5,{"inputs":[{"name":"self"}],"output":{"name":"coreid"}}],[11,"handle","","Attempts to \"promote\" this remote to a handle, if possible.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[3,"CoreExecutor"],[3,"ThreadPoolExecutor"],[8,"TaskGroup"],[8,"TaskGroupScheduler"],[3,"Handle"],[3,"Remote"]]};
initSearch(searchIndex);
